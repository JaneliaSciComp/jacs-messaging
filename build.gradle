plugins {
    id('com.github.hierynomus.license') version '0.16.1'
}

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'groovy'
    apply plugin: 'maven-publish'
    group = 'org.janelia.jacs-messaging'
    version = '2.8.1'
}

subprojects {
    apply from: "${rootDir}/deps.gradle"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    afterEvaluate {
        repositories {
            mavenLocal()
            mavenCentral()
            maven {
                url "https://nexus.janelia.org/repository/maven-releases"
            }
            maven {
                url "https://nexus.janelia.org/repository/maven-snapshots"
            }
        }

        compileJava {
            doFirst {
                options.compilerArgs = [
                        '-Xlint:deprecation',
                        '-Xlint:unchecked'
                ]
            }
        }

        compileTestJava {
            doFirst {
                options.compilerArgs = [
                        '-Xlint:deprecation',
                        '-Xlint:unchecked'
                ]
            }
        }

        tasks.register('sourceJar', Jar) {
            from sourceSets.main.allJava
            archiveClassifier = 'sources'
        }

        publishing {
            publications {
                mavenJar(MavenPublication) {
                    from components.java
                    artifact sourceJar
                }
            }
            ext {
                if (!project.hasProperty('mavenRepoUser')) {
                    mavenRepoUser = ''
                }
                if (!project.hasProperty('mavenRepoPassword')) {
                    mavenRepoPassword = ''
                }
            }
            repositories {
                maven {
                    def releasesRepoUrl = 'https://nexus.janelia.org/repository/maven-releases'
                    def snapshotsRepoUrl = 'https://nexus.janelia.org/repository/maven-snapshots'
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                    credentials {
                        username "${mavenRepoUser}"
                        password "${mavenRepoPassword}"
                    }
                }
            }
        }

    }

}

license {
    header rootProject.file('LICENSE.md')
    exclude "**/*"
}

downloadLicenses {
    includeProjectDependencies = true
    dependencyConfiguration = 'compile'
}

tasks.register('updateWrapper', Wrapper) {
    gradleVersion = "8.11.1"
}

tasks.register('version') {
    println project.version
}
